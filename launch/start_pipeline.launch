<launch>

  <arg name="kinect" default="false"/>
  <arg name="camera" default="camera"/>
  <arg name="frame" default="_link"/>

  <include if="$(arg kinect)" file="$(find openni_launch)/launch/openni.launch"/>

  <group ns="range">
    <node name="filter_node" type="filter_node" pkg="object_localization_pipeline" output="screen">
      <remap from="points_in" to="/$(arg camera)/depth_registered/points"/>
    </node>
  </group>

  <include file="$(find interactive_pcl)/pass_though.launch">
    <!--<arg name="root_topic" value="/$(arg camera)/depth_registered/points"/>-->
    <arg name="root_topic" value="/range/points_out"/>
    <!--<arg name="frame_id" value="$(arg camera)($arg frame)"/>-->
  </include>

  <group ns="semantic_segmentation">
    <param name="dictionary_uri" value="package://semantic_segmentation/data/BB_new_dict"/>
    <param name="svm_model_uri" value="package://semantic_segmentation/data/SVM_Model/svm_model.model"/>
    <param name="dictionary_location" value="$(find semantic_segmentation)/data/BB_new_dict/"/>
    <param name="svm_model_location" value="$(find semantic_segmentation)/data/SVM_Model/"/>

    <node name="semantic_segmentation_node" pkg="semantic_segmentation" type="segmentation_node" output="screen">
      <remap from="points_in" to="/filter/1"/>
      <!--<remap from="points_in" to="/$(arg camera)/depth_registered/points"/>-->
    </node>
  </group>

  <group ns="greedy_objrec_ransac">
    <node name="objrec_node" pkg="greedy_objrec_ransac" type="node" output="screen"
      args="--link $(find greedy_objrec_ransac)/data/link_uniform --node $(find greedy_objrec_ransac)/data/node_uniform --m 4">
      <remap from="points_in" to="/semantic_segmentation/points_out"/>
      <!--<remap from="points_in" to="/filter/1"/>-->
    </node>
  </group>

</launch>
